"""creating_docs

Revision ID: 390eacfdc02f
Revises: 264d01eaa8b3
Create Date: 2023-08-27 18:18:30.189777

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '390eacfdc02f'
down_revision: Union[str, None] = '264d01eaa8b3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('docs_generator_entity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('entity_name')
    )
    op.create_table('docs_generator_template',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('type_template_id', sa.Integer(), nullable=True),
    sa.Column('path_template_file', sa.String(length=200), nullable=False),
    sa.ForeignKeyConstraint(['type_template_id'], ['ref_type_templates.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('path_template_file')
    )
    op.create_table('docs_generator_declension',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('number_word', sa.Integer(), nullable=True),
    sa.Column('ending_word', sa.String(length=20), nullable=True),
    sa.Column('gender', sa.String(length=10), nullable=True),
    sa.Column('imenit', sa.String(length=10), nullable=True),
    sa.Column('rodit', sa.String(length=10), nullable=True),
    sa.Column('datel', sa.String(length=10), nullable=True),
    sa.Column('vinit', sa.String(length=10), nullable=True),
    sa.Column('tvorit', sa.String(length=10), nullable=False),
    sa.Column('predl', sa.String(length=10), nullable=False),
    sa.ForeignKeyConstraint(['entity_id'], ['docs_generator_entity.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('docs_generator_variable',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('variables', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('registry_headers_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['entity_id'], ['docs_generator_entity.id'], ),
    sa.ForeignKeyConstraint(['registry_headers_id'], ['registry_headers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('ifns_bank_account', sa.Column('ifns_inform_id', sa.Integer(), nullable=True))
    op.drop_constraint('ifns_bank_account_ifns_inform_fkey', 'ifns_bank_account', type_='foreignkey')
    op.create_foreign_key(None, 'ifns_bank_account', 'ifns_information', ['ifns_inform_id'], ['id'])
    op.drop_column('ifns_bank_account', 'ifns_inform')
    op.add_column('registry_filters', sa.Column('registry_structure_id', sa.Integer(), nullable=True))
    op.drop_constraint('registry_filters_registry_structure_fkey', 'registry_filters', type_='foreignkey')
    op.create_foreign_key(None, 'registry_filters', 'registry_structures', ['registry_structure_id'], ['id'])
    op.drop_column('registry_filters', 'registry_structure')
    op.add_column('registry_headers', sa.Column('employ_registry', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('registry_headers', 'employ_registry')
    op.add_column('registry_filters', sa.Column('registry_structure', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'registry_filters', type_='foreignkey')
    op.create_foreign_key('registry_filters_registry_structure_fkey', 'registry_filters', 'registry_structures', ['registry_structure'], ['id'])
    op.drop_column('registry_filters', 'registry_structure_id')
    op.add_column('ifns_bank_account', sa.Column('ifns_inform', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'ifns_bank_account', type_='foreignkey')
    op.create_foreign_key('ifns_bank_account_ifns_inform_fkey', 'ifns_bank_account', 'ifns_information', ['ifns_inform'], ['id'])
    op.drop_column('ifns_bank_account', 'ifns_inform_id')
    op.drop_table('docs_generator_variable')
    op.drop_table('docs_generator_declension')
    op.drop_table('docs_generator_template')
    op.drop_table('docs_generator_entity')
    # ### end Alembic commands ###
