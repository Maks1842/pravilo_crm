"""Model ref_type_filter

Revision ID: b0e3fdd21c8f
Revises: ac4a232a6214
Create Date: 2023-11-03 10:20:29.046579

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b0e3fdd21c8f'
down_revision: Union[str, None] = 'ac4a232a6214'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ref_type_filter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.drop_table('ref_task')
    op.add_column('registry_filters', sa.Column('type_filter_id', sa.Integer(), nullable=True))
    op.add_column('registry_filters', sa.Column('comment', sa.String(length=300), nullable=True))
    op.create_foreign_key(None, 'registry_filters', 'ref_type_filter', ['type_filter_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'registry_filters', type_='foreignkey')
    op.drop_column('registry_filters', 'comment')
    op.drop_column('registry_filters', 'type_filter_id')
    op.create_table('ref_task',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('section_card_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('legal_doc_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('result_statement_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('type_statement_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['legal_doc_id'], ['ref_legal_docs.id'], name='ref_task_legal_doc_id_fkey'),
    sa.ForeignKeyConstraint(['result_statement_id'], ['ref_result_statement.id'], name='ref_task_result_statement_id_fkey'),
    sa.ForeignKeyConstraint(['section_card_id'], ['ref_section_card_debtor.id'], name='ref_task_section_card_id_fkey'),
    sa.ForeignKeyConstraint(['type_statement_id'], ['ref_type_statement.id'], name='ref_task_type_statement_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ref_task_pkey'),
    sa.UniqueConstraint('name', name='ref_task_name_key')
    )
    op.drop_table('ref_type_filter')
    # ### end Alembic commands ###
